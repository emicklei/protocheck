// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: person.proto

package golang

import (
	_ "github.com/emicklei/protocheck"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Person_Gender int32

const (
	Person_UNKNOWN Person_Gender = 0
	Person_MALE    Person_Gender = 1
	Person_FEMALE  Person_Gender = 2
)

// Enum value maps for Person_Gender.
var (
	Person_Gender_name = map[int32]string{
		0: "UNKNOWN",
		1: "MALE",
		2: "FEMALE",
	}
	Person_Gender_value = map[string]int32{
		"UNKNOWN": 0,
		"MALE":    1,
		"FEMALE":  2,
	}
)

func (x Person_Gender) Enum() *Person_Gender {
	p := new(Person_Gender)
	*p = x
	return p
}

func (x Person_Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Person_Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_person_proto_enumTypes[0].Descriptor()
}

func (Person_Gender) Type() protoreflect.EnumType {
	return &file_person_proto_enumTypes[0]
}

func (x Person_Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Person_Gender.Descriptor instead.
func (Person_Gender) EnumDescriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{0, 0}
}

type Person struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// with per field state checks
	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MiddleName *string                `protobuf:"bytes,2,opt,name=middle_name,json=middleName,proto3,oneof" json:"middle_name,omitempty"`
	Surname    string                 `protobuf:"bytes,3,opt,name=surname,proto3" json:"surname,omitempty"`
	BirthDate  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	Health     *Person_Health         `protobuf:"bytes,5,opt,name=health,proto3" json:"health,omitempty"`
	// oneof with field checks
	// test with https://playcel.undistro.io/
	//
	// Types that are valid to be assigned to Identification:
	//
	//	*Person_Email
	//	*Person_Phone
	Identification isPerson_Identification `protobuf_oneof:"identification"`
	// repeated with field check
	Nicknames []string `protobuf:"bytes,8,rep,name=nicknames,proto3" json:"nicknames,omitempty"`
	// repeated proto message with  check
	Pets []*Pet `protobuf:"bytes,9,rep,name=pets,proto3" json:"pets,omitempty"`
	// map with field check
	Attributes map[string]string `protobuf:"bytes,10,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// map with proto message value with check
	Favorites     map[string]*Pet        `protobuf:"bytes,11,rep,name=favorites,proto3" json:"favorites,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NoCheckDate   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=no_check_date,json=noCheckDate,proto3" json:"no_check_date,omitempty"`
	Gender        Person_Gender          `protobuf:"varint,13,opt,name=gender,proto3,enum=golang.Person_Gender" json:"gender,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_person_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{0}
}

func (x *Person) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Person) GetMiddleName() string {
	if x != nil && x.MiddleName != nil {
		return *x.MiddleName
	}
	return ""
}

func (x *Person) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *Person) GetBirthDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BirthDate
	}
	return nil
}

func (x *Person) GetHealth() *Person_Health {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *Person) GetIdentification() isPerson_Identification {
	if x != nil {
		return x.Identification
	}
	return nil
}

func (x *Person) GetEmail() string {
	if x != nil {
		if x, ok := x.Identification.(*Person_Email); ok {
			return x.Email
		}
	}
	return ""
}

func (x *Person) GetPhone() string {
	if x != nil {
		if x, ok := x.Identification.(*Person_Phone); ok {
			return x.Phone
		}
	}
	return ""
}

func (x *Person) GetNicknames() []string {
	if x != nil {
		return x.Nicknames
	}
	return nil
}

func (x *Person) GetPets() []*Pet {
	if x != nil {
		return x.Pets
	}
	return nil
}

func (x *Person) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Person) GetFavorites() map[string]*Pet {
	if x != nil {
		return x.Favorites
	}
	return nil
}

func (x *Person) GetNoCheckDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NoCheckDate
	}
	return nil
}

func (x *Person) GetGender() Person_Gender {
	if x != nil {
		return x.Gender
	}
	return Person_UNKNOWN
}

type isPerson_Identification interface {
	isPerson_Identification()
}

type Person_Email struct {
	Email string `protobuf:"bytes,6,opt,name=email,proto3,oneof"`
}

type Person_Phone struct {
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3,oneof"`
}

func (*Person_Email) isPerson_Identification() {}

func (*Person_Phone) isPerson_Identification() {}

// second message in same file
type Pet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pet) Reset() {
	*x = Pet{}
	mi := &file_person_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pet) ProtoMessage() {}

func (x *Pet) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pet.ProtoReflect.Descriptor instead.
func (*Pet) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{1}
}

func (x *Pet) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Pet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// message without checks
type Group struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_person_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{2}
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// nested message
type Person_Health struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Weight        int32                  `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
	AvgHartRate   float64                `protobuf:"fixed64,2,opt,name=avg_hart_rate,json=avgHartRate,proto3" json:"avg_hart_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Person_Health) Reset() {
	*x = Person_Health{}
	mi := &file_person_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person_Health) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person_Health) ProtoMessage() {}

func (x *Person_Health) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person_Health.ProtoReflect.Descriptor instead.
func (*Person_Health) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Person_Health) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Person_Health) GetAvgHartRate() float64 {
	if x != nil {
		return x.AvgHartRate
	}
	return 0
}

var File_person_proto protoreflect.FileDescriptor

const file_person_proto_rawDesc = "" +
	"\n" +
	"\fperson.proto\x12\x06golang\x1a\vcheck.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa4\x0f\n" +
	"\x06Person\x12J\n" +
	"\x04name\x18\x01 \x01(\tB6\xa2ܴL1\x12\x1aname must be longer than 1\x1a\x13size(this.name) > 1R\x04name\x12m\n" +
	"\vmiddle_name\x18\x02 \x01(\tBG\xa2ܴLB\x12$middle name (if set) cannot be empty\x1a\x1asize(this.middle_name) > 0H\x01R\n" +
	"middleName\x88\x01\x01\x12V\n" +
	"\asurname\x18\x03 \x01(\tB<\xa2ܴL7\x12\x1dsurname must be longer than 1\x1a\x16size(this.surname) > 1R\asurname\x12x\n" +
	"\n" +
	"birth_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB=\xa2ܴL8\n" +
	"\x10check_birth_date\x1a$this.birth_date.getFullYear() > 2000R\tbirthDate\x12-\n" +
	"\x06health\x18\x05 \x01(\v2\x15.golang.Person.HealthR\x06health\x12\x7f\n" +
	"\x05email\x18\x06 \x01(\tBg\xa2ܴLb\n" +
	"\x05email\x12\x12email is not valid\x1aEthis.email.matches('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$')H\x00R\x05email\x12e\n" +
	"\x05phone\x18\a \x01(\tBM\xa2ܴLH\x12\x12phone is not valid\x1a2this.phone.matches('^[0-9]{3}-[0-9]{3}-[0-9]{4}$')H\x00R\x05phone\x12\xc4\x01\n" +
	"\tnicknames\x18\b \x03(\tB\xa5\x01\xa2ܴL`\x12!at least one nickname is required\x1a;size(this.nicknames) > 0 && this.nicknames.all(x,size(x)>0)\xa2ܴL;\x12\x18nickname cannot be empty\x1a\x1fthis.nicknames.all(x,size(x)>0)R\tnicknames\x12Y\n" +
	"\x04pets\x18\t \x03(\v2\v.golang.PetB8\xa2ܴL3\x12\x1cat least one Pet is required\x1a\x13size(this.pets) > 0R\x04pets\x12\x84\x01\n" +
	"\n" +
	"attributes\x18\n" +
	" \x03(\v2\x1e.golang.Person.AttributesEntryBD\xa2ܴL?\x12\"at least one attribute is required\x1a\x19size(this.attributes) > 0R\n" +
	"attributes\x12\x7f\n" +
	"\tfavorites\x18\v \x03(\v2\x1d.golang.Person.FavoritesEntryBB\xa2ܴL=\x12!at least one favorite is required\x1a\x18size(this.favorites) > 0R\tfavorites\x12>\n" +
	"\rno_check_date\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\vnoCheckDate\x12-\n" +
	"\x06gender\x18\r \x01(\x0e2\x15.golang.Person.GenderR\x06gender\x1a\xc1\x01\n" +
	"\x06Health\x12M\n" +
	"\x06weight\x18\x01 \x01(\x05B5\xa2ܴL0\x12\x1dweight in kg must be positive\x1a\x0fthis.weight > 0R\x06weight\x12h\n" +
	"\ravg_hart_rate\x18\x02 \x01(\x01BD\xa2ܴL?\x12#average heart rate must be positive\x1a\x18this.avg_hart_rate > 0.0R\vavgHartRate\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aI\n" +
	"\x0eFavoritesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12!\n" +
	"\x05value\x18\x02 \x01(\v2\v.golang.PetR\x05value:\x028\x01\"+\n" +
	"\x06Gender\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04MALE\x10\x01\x12\n" +
	"\n" +
	"\x06FEMALE\x10\x02:\xbf\x01\xa2ܴLX\n" +
	"\x10person_invariant\x12 name and surname cannot be empty\x1a\"size(this.name + this.surname) > 0\xa2ܴL]\n" +
	"\x1eperson_health_weight_invariant\x12 weight cannot be larger than 300\x1a\x19this.health.weight <= 300B\x10\n" +
	"\x0eidentificationB\x0e\n" +
	"\f_middle_name\"\xb2\x01\n" +
	"\x03Pet\x12e\n" +
	"\x04kind\x18\x01 \x01(\tBQ\xa2ܴLL\n" +
	"\x04pet1\x12\x1aonly dog or cat is allowed\x1a(this.kind == 'cat' || this.kind == 'dog'R\x04kind\x12D\n" +
	"\x04name\x18\x02 \x01(\tB0\xa2ܴL+\x12\x14name cannot be empty\x1a\x13size(this.name) > 0R\x04name\"\x1b\n" +
	"\x05Group\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04nameBF\n" +
	"\x02hrB\bHRProtosP\x01Z4github.com/emicklei/protocheck-example/golang;golangb\x06proto3"

var (
	file_person_proto_rawDescOnce sync.Once
	file_person_proto_rawDescData []byte
)

func file_person_proto_rawDescGZIP() []byte {
	file_person_proto_rawDescOnce.Do(func() {
		file_person_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_person_proto_rawDesc), len(file_person_proto_rawDesc)))
	})
	return file_person_proto_rawDescData
}

var file_person_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_person_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_person_proto_goTypes = []any{
	(Person_Gender)(0),            // 0: golang.Person.Gender
	(*Person)(nil),                // 1: golang.Person
	(*Pet)(nil),                   // 2: golang.Pet
	(*Group)(nil),                 // 3: golang.Group
	(*Person_Health)(nil),         // 4: golang.Person.Health
	nil,                           // 5: golang.Person.AttributesEntry
	nil,                           // 6: golang.Person.FavoritesEntry
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_person_proto_depIdxs = []int32{
	7, // 0: golang.Person.birth_date:type_name -> google.protobuf.Timestamp
	4, // 1: golang.Person.health:type_name -> golang.Person.Health
	2, // 2: golang.Person.pets:type_name -> golang.Pet
	5, // 3: golang.Person.attributes:type_name -> golang.Person.AttributesEntry
	6, // 4: golang.Person.favorites:type_name -> golang.Person.FavoritesEntry
	7, // 5: golang.Person.no_check_date:type_name -> google.protobuf.Timestamp
	0, // 6: golang.Person.gender:type_name -> golang.Person.Gender
	2, // 7: golang.Person.FavoritesEntry.value:type_name -> golang.Pet
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_person_proto_init() }
func file_person_proto_init() {
	if File_person_proto != nil {
		return
	}
	file_person_proto_msgTypes[0].OneofWrappers = []any{
		(*Person_Email)(nil),
		(*Person_Phone)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_person_proto_rawDesc), len(file_person_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_person_proto_goTypes,
		DependencyIndexes: file_person_proto_depIdxs,
		EnumInfos:         file_person_proto_enumTypes,
		MessageInfos:      file_person_proto_msgTypes,
	}.Build()
	File_person_proto = out.File
	file_person_proto_goTypes = nil
	file_person_proto_depIdxs = nil
}
